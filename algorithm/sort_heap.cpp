//时间复杂度为O(N*logN)

//1．父结点的键值总是大于或等于（小于或等于）任何一个子节点的键值。

//2．每个结点的左子树和右子树都是一个二叉堆（都是最大堆或最小堆）。

//当父结点的键值总是大于或等于任何一个子节点的键值时为最大堆。当父结点的键值总是小于或等于任何一个子节点的键值时为最小堆
//

//堆的插入   一般都用数组来表示堆，i结点的父结点下标就为(i – 1) / 2。它的左右子结点下标分别为2 * i + 1和2 * i + 2。如第0个结点左右子结点下标分别为1和2
//  次插入都是将新数据放在数组最后。可以发现从这个新数据的父结点到根结点必然为一个有序的数列

// n =》 a的长度，num要插入的新数据
void MinHeapAddNumber(int a[],int n,int num){
    a[n] = num;
    MinHeapFixup(a, n);
}
//新加入i节点，父节点为(i-1)/2;
void MinHeapFixup(int a[], int n){
    int j ,tmp;
    tmp = a[i];
    j = (n-1)/2;
    while(j >= 0 && n != 0){
        if (a[j] <= tmp){
            break;
        }
        a[n] = a[j];
        n = j;
        j = (n-1)/2;
    }
    a[i] = tmp;
}






