class Solution {
public:
    void backtrack(int n, vector<int> &nums, vector<vector<int>> &res, int first)
    {
        if(first == n)  res.push_back(nums);
        for(int i = first; i < n; i++)
        {
            swap(nums[first], nums[i]);
            backtrack(n, nums, res,  first+1);
            swap(nums[first], nums[i]);
        }
        
    }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> res;
        backtrack(nums.size(), nums, res, 0);
        return res;
    }
};
